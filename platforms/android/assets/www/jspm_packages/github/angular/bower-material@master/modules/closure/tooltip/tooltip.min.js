/* */ 
"format cjs";
/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.11-master-54e3413
 */
function MdTooltipDirective(y,g,E,w,x,$,T,P){var D="focus touchstart mouseenter",O="blur touchcancel mouseleave",V={top:{x:T.xPosition.CENTER,y:T.yPosition.ABOVE},right:{x:T.xPosition.OFFSET_END,y:T.yPosition.CENTER},bottom:{x:T.xPosition.CENTER,y:T.yPosition.BELOW},left:{x:T.xPosition.OFFSET_START,y:T.yPosition.CENTER}};return{restrict:"E",priority:210,scope:{mdZIndex:"=?mdZIndex",mdDelay:"=?mdDelay",mdVisible:"=?mdVisible",mdAutohide:"=?mdAutohide",mdDirection:"@?mdDirection"},link:function(a,o,d){var n,e,r,l,s,c="md-tooltip-"+$.nextUid(),u=$.getParentWithPointerEvents(o),m=E.throttle(b),p=!1,f=null;function t(){a.mdZIndex=a.mdZIndex||100,a.mdDelay=a.mdDelay||0,V[a.mdDirection]||(a.mdDirection="bottom")}function i(e){var t=e||x(o.text().trim())(a.$parent);(!u.attr("aria-label")&&!u.attr("aria-labelledby")||u.attr("md-labeled-by-tooltip"))&&(u.attr("aria-label",t),u.attr("md-labeled-by-tooltip")||u.attr("md-labeled-by-tooltip",c))}function b(){t(),l&&l.panelEl&&l.panelEl.removeClass(n),n="md-origin-"+a.mdDirection,e=V[a.mdDirection],r=T.newPanelPosition().relativeTo(u).addPanelPosition(e.x,e.y),l&&l.panelEl&&(l.panelEl.addClass(n),l.updatePosition(r))}function h(e){h.queued&&h.value===!!e||!h.queued&&a.mdVisible===!!e||(h.value=!!e,h.queued||(e?(h.queued=!0,s=y(function(){a.mdVisible=h.value,h.queued=!1,s=null,a.visibleWatcher||v(a.mdVisible)},a.mdDelay)):$.nextTick(function(){a.mdVisible=!1,a.visibleWatcher||v(!1)})))}function v(e){e?function(){if(!o[0].textContent.trim())throw new Error("Text for the tooltip has not been provided. Please include text within the mdTooltip element.");if(!l){var e=angular.element(document.body),t=T.newPanelAnimation().openFrom(u).closeTo(u).withAnimation({open:"md-show",close:"md-hide"}),i={id:c,attachTo:e,contentElement:o,propagateContainerEvents:!0,panelClass:"md-tooltip",animation:t,position:r,zIndex:a.mdZIndex,focusOnOpen:!1,onDomAdded:function(){l.panelEl.addClass(n)}};l=T.create(i)}l.open().then(function(){l.panelEl.attr("role","tooltip")})}():l&&l.close()}t(),i(),o.detach(),b(),function(){if(u[0]&&"MutationObserver"in g){var e=new MutationObserver(function(e){e.some(function(e){return"disabled"===e.attributeName&&u[0].disabled})});e.observe(u[0],{attributes:!0})}function t(){h(!1)}function i(){f=document.activeElement===u[0]}function o(e){"focus"===e.type&&f?f=!1:a.mdVisible||(u.on(O,n),h(!0),"touchstart"===e.type&&u.one("touchend",function(){$.nextTick(function(){w.one("touchend",n)},!1)}))}function n(){((a.hasOwnProperty("mdAutohide")?a.mdAutohide:d.hasOwnProperty("mdAutohide"))||p||w[0].activeElement!==u[0])&&(s&&(y.cancel(s),h.queued=!1,s=null),u.off(O,n),u.triggerHandler("blur"),h(!1)),p=!1}function r(){p=!0}function l(){P.deregister("scroll",t,!0),P.deregister("blur",i),P.deregister("resize",m),u.off(D,o).off(O,n).off("mousedown",r),n(),e&&e.disconnect()}f=!1,P.register("scroll",t,!0),P.register("blur",i),P.register("resize",m),a.$on("$destroy",l),u.on("mousedown",r),u.on(D,o)}(),function(){if(o[0]&&"MutationObserver"in g){var e=new MutationObserver(function(e){e.forEach(function(e){"md-visible"!==e.attributeName||a.visibleWatcher||(a.visibleWatcher=a.$watch("mdVisible",v))})});e.observe(o[0],{attributes:!0}),d.hasOwnProperty("mdVisible")&&(a.visibleWatcher=a.$watch("mdVisible",v))}else a.visibleWatcher=a.$watch("mdVisible",v);a.$watch("mdDirection",b),o.one("$destroy",t),u.one("$destroy",t),a.$on("$destroy",function(){h(!1),l&&l.destroy(),e&&e.disconnect(),o.remove()}),-1<o.text().indexOf(x.startSymbol())&&a.$watch(function(){return o.text().trim()},i);function t(){a.$destroy()}}()}}}function MdTooltipRegistry(){var r={},l=angular.element(window);return{register:function(e,t,i){var o=r[e]=r[e]||[];o.length||(i?window.addEventListener(e,a,!0):l.on(e,a));-1===o.indexOf(t)&&o.push(t)},deregister:function(e,t,i){var o=r[e],n=o?o.indexOf(t):-1;-1<n&&(o.splice(n,1),0===o.length&&(i?window.removeEventListener(e,a,!0):l.off(e,a)))}};function a(t){r[t.type]&&r[t.type].forEach(function(e){e.call(this,t)},this)}}goog.provide("ngmaterial.components.tooltip"),goog.require("ngmaterial.components.panel"),goog.require("ngmaterial.core"),MdTooltipDirective.$inject=["$timeout","$window","$$rAF","$document","$interpolate","$mdUtil","$mdPanel","$$mdTooltipRegistry"],angular.module("material.components.tooltip",["material.core","material.components.panel"]).directive("mdTooltip",MdTooltipDirective).service("$$mdTooltipRegistry",MdTooltipRegistry),ngmaterial.components.tooltip=angular.module("material.components.tooltip");